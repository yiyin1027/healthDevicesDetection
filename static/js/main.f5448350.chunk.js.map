{"version":3,"sources":["serviceWorker.js","components/CustomHeader/CustomHeader.js","components/user.js","aws-exports.js","components/LineChartComponent.js","components/data.js","components/notfound.js","pages/Home/Home.js","pages/FAQ/Faq.js","pages/Breathing/Breathing.js","pages/Falls/Falls.js","components/pubnub.js","Client.js","components/PanelComponent/ConsolePanel.js","components/PanelComponent/DevicePanel.js","components/PanelComponent/File.js","pages/DashBoard/Dashboard.js","App.js","index.js","pages/Home/home1.png","pages/Home/home12.jpg","pages/Falls/Fallpicture.png"],"names":["Boolean","window","location","hostname","match","CustomHeader","Component","constructor","props","super","onItemSelect","item","key","keyPath","this","setState","currentKey","localStorage","setItem","state","getItem","render","className","theme","onClick","mode","selectedKeys","style","lineHeight","Item","NavLink","to","user_holder","params","id","User","React","Link","Route","path","component","awsmobile","D3blackbox","d3render","componentDidMount","call","componentDidUpdate","transform","ref","XAxis","axis","d3","tickFormat","d","scale","xScale","refs","anchor","classed","transition","YAxis","yScale","YGrid","tickSizeOuter","tickSizeInner","plotWidth","Line","x","y","curve","current","selectAll","data","plotData","interrupt","enter","append","valueLine","merge","attr","xSlide","on","md","rnd","hr","map","i","date","Date","getTime","value","reverse","push","shift","heart_rate","MakeData","Amplify","configure","TestList","testItems","tests","test","timestamp","deviceID","BreathRate","HeartRate","falldetected","headers","TestListLoader","query","graphqlOperation","loading","errors","listTests","items","TestItem","br","title","TestItemLoader","handleSubmit","e","a","preventDefault","form","validateFields","err","val","console","log","API","graphql","result","getTest","handleChange","event","change","target","name","getFieldDecorator","gutter","span","onSubmit","width","rules","required","message","onChange","placeholder","type","htmlType","WrappedTestItemLoader","Form","create","LineChart","updateScale","nice","xDomain","yDomain","yFn","domain","range","margin","left","right","height","top","bottom","updatePlotSize","plotHeight","metaData","xFn","fill","stroke","strokeLinejoin","Data","onProgressClick","hrClick","getAvgHR","hrList","reduce","prev","next","length","toFixed","componentWillMount","load","componentWillUnmount","timeout","clearTimeout","callback","loadAllData","loaded","bind","setTimeout","previousState","percent","format","Math","round","default","strokeColor","withAuthenticator","includeGreetings","Notfound","styles1","paddingTop","paddingLeft","color","styles","paddingRight","fontSize","fontFamily","contentl","image1","contentr","ColumnData","contents","row","tag","image","src","alt","Home","justify","align","xs","sm","lg","content","Question","Answer","Items","index","Faq","heading","Rows","Breathing","styles2","textAlign","picture","data1","Falls","PubNub","pubnub","PubNubReact","publishKey","subscribeKey","init","subscribe","channels","withPresence","getMessage","msg","getStatus","st","publish","channel","unsubscribe","messages","m","socket","require","connect","getMsg","JSON","stringify","Title","Typography","ConsolePanel","handleClose","show","getRunningAvg","len","Falldetected","lastDetect","series","time","clock","split","tempdata","getFullYear","getMonth","getDate","chart","addData","toLocaleString","real_time_data","am4core","am4themes_animated","am4charts","zoomOutButton","disabled","dateAxis","xAxes","renderer","grid","template","minGridDistance","interpolationDuration","rangeChangeDuration","dateFormats","setKey","periodChangeDateFormats","inside","axisFills","ticks","valueAxis","yAxes","tooltip","minLabelPosition","maxLabelPosition","dataFields","dateX","valueY","tooltipText","defaultState","transitionDuration","tensionX","moderate","createSeriesRange","endValue","critical","labels","adapter","add","rotation","dataItem","verticalCenter","horizontalCenter","cursor","behavior","dispose","interval","clearInterval","padding","background","minHeight","visible","onOk","onCancel","level","column","xxl","xl","label","consll","DevicePanel","listData","href","url","dataSource","renderItem","RenderVideo","get","Storage","video","then","componentWillReceiveProps","nextProps","nextContext","controls","S3Content","list","s3content","file","files","put","contentType","catch","Meta","Content","Layout","Sider","Menu","SubMenu","DashBoard","onCollapse","collapsed","onMenuClick","collapsible","defaultSelectedKeys","exact","Header","App","BrowserRouter","Switch","Dashboard","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f5448350.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport {Menu} from 'antd/lib/index';\nimport {NavLink} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './CustomHeader.css';\n\n\nclass CustomHeader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentKey: localStorage.getItem('navPage') || 'Home'\n        }\n    }\n\n    onItemSelect = ({item, key, keyPath}) => {\n        this.setState({currentKey: key});\n        localStorage.setItem('navPage', key);\n    };\n\n    render() {\n        return (\n            <nav>\n                <div className={'logo'}/>\n                <Menu theme=\"dark\"\n                      onClick={this.onItemSelect}\n                      mode=\"horizontal\"\n                      selectedKeys={[this.state.currentKey]}\n                      style={{lineHeight: '64px'}}>\n                    <Menu.Item key='Home'><NavLink to={'/'}>Home</NavLink></Menu.Item>\n                    <Menu.Item key='Breathing'><NavLink to={'/breathing'}>Breathing</NavLink></Menu.Item>\n                    <Menu.Item key='Falls'><NavLink to={'/falls'}>Falls</NavLink></Menu.Item>\n                    <Menu.Item key='FAQ'><NavLink to={'/faq'}>FAQ</NavLink></Menu.Item>\n                    <Menu.Item key='Aboutus'><NavLink to={'/about'}>About us</NavLink></Menu.Item>\n                    <Menu.Item key='Dashboard'><NavLink to={'/dashboard'}>DashBoard</NavLink></Menu.Item>\n                    <Menu.Item key='data'><NavLink to={'/data'}>Real-time data</NavLink></Menu.Item>\n                </Menu>\n            </nav>\n        )\n    }\n}\n\n\nexport default CustomHeader;","import React from 'react';\nimport {Link, Route} from \"react-router-dom\";\n\nconst user_holder = ({match}) => <p>{match.params.id}</p>;\n\nexport default class User extends React.Component {\n\n\n    render() {\n        return (\n            <div>\n                <h1>Users</h1>\n                <ul>\n                    <li><Link to={'/users/1'}>User 1</Link></li>\n                    <li><Link to={'/users/2'}>User 2</Link></li>\n                    <li><Link to={'/users/3'}>User 3</Link></li>\n                </ul>\n                <Route path={'/users/:id'} component={user_holder}/>\n            </div>\n        )\n    }\n}","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:2918a80d-7355-489a-9c9d-eee80381d798\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_rvw7curzL\",\n    \"aws_user_pools_web_client_id\": \"377mk38qir85oo1p4p1n16s0to\",\n    \"oauth\": {},\n    \"aws_content_delivery_bucket\": \"project-frontend-hostingbucket-pf\",\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\n    \"aws_content_delivery_url\": \"http://project-frontend-hostingbucket-pf.s3-website-us-east-1.amazonaws.com\",\n    \"aws_user_files_s3_bucket\": \"front-end-s3bucket-for-video-pf\",\n    \"aws_user_files_s3_bucket_region\": \"us-east-1\"\n};\n\n\nexport default awsmobile;\n","import * as d3 from \"d3\";\nimport React, { Component } from \"react\";\n\n\nexport function D3blackbox(d3render) {\n    return class Blackbox extends Component {\n        componentDidMount() {\n            d3render.call(this);\n        }\n        componentDidUpdate() {\n            d3render.call(this);\n        }\n\n        render() {\n            const transform = this.props.transform || \"\";\n            return <g transform={transform} ref=\"anchor\" />;\n        }\n    };\n}\n\n\nexport const XAxis = D3blackbox(function() {\n    const axis = d3\n        .axisBottom()\n        .tickFormat(d => d3.timeFormat(\"%H:%M %S\")(d))\n        .scale(this.props.xScale);\n\n    d3\n        .select(this.refs.anchor)\n        .classed(\"xAxis\", true)\n        .transition()\n        .call(axis);\n});\n\nexport const YAxis = D3blackbox(function() {\n    const axis = d3\n        .axisLeft()\n        .tickFormat(d => d)\n        .scale(this.props.yScale);\n\n    d3\n        .select(this.refs.anchor)\n        .classed(\"yAxis\", true)\n        .transition()\n        .call(axis);\n});\n\nexport const YGrid = D3blackbox(function() {\n    const axis = d3\n        .axisRight()\n        .tickFormat(d => null)\n        .scale(this.props.yScale)\n        .tickSizeOuter(0)\n        .tickSizeInner(this.props.plotWidth);\n\n    d3\n        .select(this.refs.anchor)\n        .classed(\"yGrid\", true)\n        .call(axis);\n});\n\nexport const Line = D3blackbox(function() {\n    const path = d3\n        .line()\n        .x(d => d.x)\n        .y(d => d.y).curve(d3.curveMonotoneX);\n\n    const parent = d3.select(this.refs.anchor);\n\n    const current = parent.selectAll(\".valueLine\").data([this.props.plotData]);\n\n    current.interrupt();\n\n    const enter = current\n        .enter()\n        .append(\"path\")\n        .classed(\"valueLine\", true);\n\n    const valueLine = current.merge(enter);\n\n    current\n        .transition()\n        .attr(\"transform\", `translate(${this.props.xSlide}, 0)`)\n        .on(\"end\", () => {\n            valueLine.attr(\"d\", path);\n            current.attr(\"transform\", null);\n        });\n\n});\n\nconst MakeData = () => {\n    const rnd = d3.randomNormal(15, 2);\n    const hr = d3.randomNormal(70,5);\n\n    let data = d3\n        .range(100)\n        .map(i => {\n            return { date: new Date(new Date().getTime() - 1000 * i), value: rnd() };\n        })\n        .reverse();\n\n    return () => {\n        data.push({ date: new Date(), value: rnd() });\n        data.shift();\n        let heart_rate=hr();\n\n        return {data, heart_rate};\n    };\n};\n\nconst md = MakeData();\n\nexport const loadAllData = (callback = () => {}) => {\n    callback(md());\n};","import React from 'react';\nimport awsmobile from '../aws-exports';\nimport {Button, Col, Progress, Row, Statistic, Form, Input, Card, List} from \"antd\";\nimport {Connect, withAuthenticator} from \"aws-amplify-react\";\nimport Amplify, {API, graphqlOperation} from 'aws-amplify';\n\nimport * as d3 from 'd3';\nimport {Line, loadAllData, XAxis, YAxis, YGrid} from \"./LineChartComponent\";\n\nAmplify.configure(awsmobile);\nconst ListTests = `query ListTests{listTests(limit:5){items{deviceID timestamp BreathRate HeartRate falldetected}}}`;\nconst GetTest = `query GetTest($deviceID: String! $timestamp: String!){\n  getTest(deviceID:$deviceID,timestamp:$timestamp){\n    deviceID\n    timestamp\n    BreathRate\n    HeartRate\n    falldetected\n  }}`;\n\nclass TestList extends React.Component {\n    testItems() {\n        return this.props.tests.map(test => <List.Item\n            key={test.timestamp}>{`${test.deviceID} Time: ${test.timestamp} BR: ${test.BreathRate} HR: ${test.HeartRate} fall: ${test.falldetected}`}</List.Item>)\n    }\n\n    render() {\n        return (\n            <List headers={<div>My data</div>}>\n                {this.testItems()}\n            </List>\n        );\n    }\n}\n\nclass TestListLoader extends React.Component {\n    render() {\n        return (\n            <Connect query={graphqlOperation(ListTests)}>\n                {({data, loading, errors}) => {\n                    if (loading) {\n                        return <div>loading...</div>\n                    }\n                    if (!data.listTests) return;\n                    return <TestList tests={data.listTests.items}/>\n                }}\n            </Connect>\n        );\n    }\n}\n\nclass TestItem extends React.Component {\n    render() {\n        if (this.props.test) {\n            const {timestamp, br, hr, falldetected, deviceID} = this.props.test;\n            return (\n                <Card title={'ID: ' + deviceID}>\n                    <p>{'time: ' + timestamp}</p>\n                    <p>{'br: ' + br}</p>\n                    <p>{'hr: ' + hr}</p>\n                    <p>{'fall: ' + falldetected}</p>\n                </Card>\n            );\n        } else\n            return <Card title={'empty'}/>\n    }\n}\n\nclass TestItemLoader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, val) => {\n                if (!e) {\n                    console.log('submit received: ', val)\n                }\n            }\n        )\n        const result = await API.graphql(graphqlOperation(GetTest, {\n            deviceID: this.state.deviceID,\n            timestamp: this.state.timestamp\n        }))\n        console.log(result);\n        debugger\n        if (result.data.getTest)\n            this.setState({\n                deviceID: result.data.getTest.deviceID,\n                timestamp: result.data.getTest.timestamp,\n                br: result.data.getTest.BreathRate,\n                hr: result.data.getTest.HeartRate,\n                falldetected: result.data.getTest.falldetected,\n\n            })\n    }\n\n    handleChange = (event) => {\n        let change = {};\n        change[event.target.name] = event.target.value;\n        this.setState(change)\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form onSubmit={this.handleSubmit} className={'getItemForm'} style={{width: 300}}>\n                        <Form.Item>\n                            {getFieldDecorator('deviceID', {\n                                rules: [{required: true, message: 'Input is required'}]\n                            })(\n                                <Input onChange={this.handleChange} placeholder={'Device ID'} name={'deviceID'}/>\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('timestamp', {\n                                rules: [{required: true, message: 'time stamp is required'}]\n                            })(\n                                <Input onChange={this.handleChange} placeholder={'Time stamp'} name={'timestamp'}/>\n                            )}\n                        </Form.Item>\n                        <Button type={\"primary\"} htmlType={\"submit\"}>get</Button>\n                    </Form>\n                </Col>\n                <Col span={12}>\n                    <TestItem test={this.state}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst WrappedTestItemLoader = Form.create({name: 'getItemForm'})(TestItemLoader);\n\nclass LineChart extends React.Component {\n\n    updateScale(props) {\n        const data = props.data;\n        const xScale = d3.scaleTime();\n        const yScale = d3.scaleLinear().nice();\n\n        const xDomain = d3.extent(data, d => d.date);\n        const yDomain = props.yDomain || [0, d3.max(data, d => props.yFn(d))];\n\n        xScale\n            .domain(xDomain)\n            .range([0, props.width - (props.margin.left + props.margin.right)]);\n\n\n        yScale\n            .domain(yDomain)\n            .range([props.height - (props.margin.top + props.margin.bottom), 0]);\n\n        return {xScale, yScale}\n    }\n\n    updatePlotSize(props) {\n        const plotWidth =\n            props.width - (props.margin.left + props.margin.right);\n        const plotHeight =\n            props.height - (props.margin.top + props.margin.bottom);\n\n        return {plotWidth, plotHeight}\n\n\n    }\n\n\n    render() {\n        const {xScale, yScale} = this.updateScale(this.props);\n\n        const {plotWidth, plotHeight} = this.updatePlotSize(this.props);\n\n        const metaData = {\n            xScale: xScale,\n            yScale: yScale,\n            plotWidth: plotWidth,\n            plotHeight: plotHeight,\n            xSlide: -xScale(this.props.xFn(this.props.data[1]))\n        };\n        const plotData = {\n            plotData: this.props.data.map((d, i) => {\n                return {\n                    id: i,\n                    data: d,\n                    x: xScale(this.props.xFn(d)),\n                    y: yScale(this.props.yFn(d))\n                };\n            })\n        };\n\n        return (\n            <svg width={this.props.width} height={this.props.height}>\n                <g\n                    className=\"axisLayer\"\n                    width={plotWidth}\n                    height={plotHeight}\n                    transform={`translate(${this.props.margin.left}, ${this.props.margin\n                        .top})`}\n                >\n                    <YGrid {...metaData} />\n                    <XAxis {...metaData} transform={`translate(0,${plotHeight})`}/>\n                    <YAxis {...metaData} />\n                </g>\n                <g\n                    className=\"plotLayer\"\n                    width={plotWidth}\n                    height={plotHeight}\n                    fill={'none'}\n                    stroke={'#1E88E5'}\n                    d={'line'}\n                    strokeLinejoin={'round'}\n                    transform={`translate(${this.props.margin.left}, ${this.props.margin\n                        .top})`}\n                >\n                    <Line {...metaData} {...plotData} />\n                </g>\n            </svg>\n        );\n    }\n}\n\nclass Data extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            hrClick: false,\n            hrList: []\n        }\n    }\n\n    componentWillMount() {\n        this.load()\n    }\n\n    componentWillUnmount() {\n        if (this.timeout) clearTimeout(this.timeout);\n    }\n\n    load() {\n        loadAllData(this.loaded.bind(this));\n        this.timeout = setTimeout(() => {\n            this.load()\n        }, 1000)\n    }\n\n    loaded(data) {\n        this.setState(previousState => ({data: data.data, hrList: [...previousState.hrList, data.heart_rate]}))\n    }\n\n    onProgressClick = () => {\n        this.setState({hrClick: !this.state.hrClick})\n    };\n\n    getAvgHR = () => (\n        (this.state.hrList.reduce((prev, next) => prev + next, 0) / this.state.hrList.length).toFixed(2)\n    );\n\n    render() {\n        return (\n            <Row gutter={16}>\n                <Col span={14}>\n                    <TestListLoader/>\n                    <WrappedTestItemLoader/>\n                    <LineChart\n                        className=\"LineChartComponent\"\n                        data={this.state.data}\n                        width={750}\n                        height={400}\n                        xFn={d => d.date}\n                        yFn={d => d.value}\n                        yDomain={[0, 30]}\n                        margin={{top: 20, left: 40, bottom: 20, right: 20}}\n                    />\n                </Col>\n                <Col span={10}>\n                    <Button onClick={this.onProgressClick}>Change view</Button>\n                    {(!this.state.hrClick) ?\n                        <Progress type=\"dashboard\" percent={this.state.hrList[this.state.hrList.length - 1]}\n                                  format={percent => `Hr:${Math.round(percent)}`} default={'default'}\n                                  strokeColor={'#D32F2F'}/> :\n                        <Statistic title={'Average'} value={this.getAvgHR()}/>}\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default withAuthenticator(Data, {includeGreetings: true});","import React from \"react\";\n\nclass Notfound extends React.Component {\n    render() {\n        return (\n            <div>\n                <span>404 will be added later</span>\n            </div>\n        );\n    }\n}\n\nexport default Notfound;","import React from 'react';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col/';\nimport image from './home1.png';\nimport image1 from './home12.jpg'\nimport './Home.css';\n\nvar styles1 = {\n    paddingTop: 100, paddingLeft: 40,\n    color: '#204871'\n};\n\nvar styles = {\n    paddingLeft: 50, paddingTop: 20, paddingRight: 20,\n    color: '#204871',\n    fontSize: 17,\n    fontFamily: 'Verdana, Geneva, sans-serif'\n};\n\nvar contentl = [\n    {\n        \"data\": `Providing continuous, non-invasive and unobtrusive monitoring of vital signs and activities of seniors that blends into their lifestyle while they are alone in their apartments.`,\n        \"tag\": `Goal`\n    },\n\n    {\n        \"data\": `1.  Many seniors are not comfortable with wearables\n2.  Fear of forgetting wearables\n3.  Not liking wearables\n4.  Not being able to press the button\n5.  Privacy issues with surveillance cameras\n6.  Hard to track wellbeing while residents are alone\n7.  Difficulty monitoring dementia patients`,\n        \"tag\": `Problems`,\n\n    },\n    {\n        \"image\": image1,\n        \"tag\": `Application Scenario`\n    }\n];\n\nvar contentr = [\n    {\n        \"data\": `1.  Monitoring activities, breathing and fall \n2.  Completely preserving privacy\n3.  Relying on off-the-shelf inexpensive radar\n4.  Patent protection`,\n        \"tag\": 'Features'\n    },\n    {\n        \"tag\": `Solutions`,\n        \"data\": `We at the Health Sensor Solutions (HSS) are developing a smart radar sensor system easily deployable in a corner of the room, monitoring the patient’s health automatically and notifying caregivers seamlessly. \n\nVersions:\n1.  Stand-alone solution: Monitoring breathing and activities\n2. Cloud-based solution: Monitoring fall, breathing patterns and activities and providing notifications in emergency situations`,\n    },\n    {\n        \"data\": `1.  Serious concerns in detecting breathing, activities and falls\n2.  Elderly population is on the rise; 55M over 65\n3. Projected growth in the industry from $219.9 billion in 2012 to $346 billion 2040`,\n        \"tag\": `Opportunity`\n    }\n\n];\n\n\nclass ColumnData extends React.Component {\n    render() {\n        return (\n            <div>{\n                this.props.contents.map(row => {\n                    return (\n                        <div key={row.tag}>\n                            <div>\n                                <h1 style={styles1}>{row.tag}</h1>\n                                {row.image ? (\n                                    <div style={{paddingTop: 20, paddingLeft: 100}}><img src={row.image} alt=\"boohoo\"/>\n                                    </div>\n                                ) : (\n                                    <pre className=\"preformatted\" style={styles}>{row.data}</pre>\n                                )}\n                            </div>\n                        </div>\n                    );\n                })\n            }</div>\n        );\n    }\n}\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div className=\"home-component\">\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" className=\"home-banner\">\n                    <Col xs={20} sm={20} md={12} lg={18}>\n                        <div className=\"banner-title\">Welcome to HSS</div>\n                        <div className=\"banner-title\">Enabling Contact-Less Monitoring</div>\n                    </Col>\n                </Row>\n\n                <div className=\"home-content\">\n                    <h1 style={{color: '#204871'}} align=\"center\">Contact-less Monitoring System for\n                        Seniors</h1>\n                    <div className=\"wrap\" align=\"center\">\n                        <div className=\"fleft\">\n                            <ColumnData contents={contentl}/>\n                        </div>\n                        <div className=\"fright\">\n                            <ColumnData contents={contentr}/>\n                        </div>\n                    </div>\n                    <h1 style={{paddingTop: 50, paddingLeft: 500, color: '#204871'}}>User Interface (Sample)</h1>\n                    <div style={{paddingTop: 40, paddingLeft: 340}}><img src={image} alt=\"boohoo\"/></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Faq.css'\n\nlet content = [\n    {\n        Question: \"1.\tWhat is the range of the sensor?\",\n        Answer: \"Up to 10 m. It will cover one room and the bathroom\"\n    },\n    {\n        Question:\"2.\tIs it the sensor harmful?\",\n        Answer:\"The radiation level is smaller than typical WiFi device.\"\n    },\n    {\n        Question:\"3.\tIn what sense is it better than wearables?\",\n        Answer:\"It does not require any change in the resident's normal daily activities nor any  change in caregiver's normal routine.\"\n    }\n];\n\nclass Items extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1 className={'headStyle'}>FAQs</h1>\n                {this.props.contents.map((row, index) => {\n                    return (\n                        <div key={index+'FAQs'}>\n                            <h2 className={'faqQ'}>{row.Question}</h2>\n                            <h3 className={'faqA'}>{row.Answer}</h3>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nItems.propTypes={\n    contents:PropTypes.array\n};\n\nclass Faq extends React.Component {\n    render() {\n        return (\n            <div>\n                <Items contents={content}/>\n            </div>\n        );\n    }\n}\n\n\nexport default Faq;","import React from 'react'\nimport './Breathing.css'\nimport PropTypes from 'prop-types'\n\nvar styles = {\n    paddingLeft: 200, paddingRight: 200, paddingTop: 20,\n    color: '#204871',\n    fontSize: 15,\n    fontFamily: 'Verdana, Geneva, sans-serif'\n};\n\nvar styles1 = {\n    paddingTop: 50, paddingLeft: 100,\n    color: '#204871'\n};\n\n\nvar content = [\n    {\n        data: `There are two main problem that are directly related to the breathing rate and patterns of the patient: abnormal breathing patterns and the minimal view a doctor has into the life of their patient. \n\nAbnormal breathing patterns are most often attributed to sleep apnea or hyperventilation. Often it is not known if a patient has breathing issues or not; This can be dangerous in one’s old age. The current method of testing for breathing issues is to use a breathing belt. Breathing belts are not taken home by the patient and so, the tests are relatively short. The lack of the patient’s normal environment and the short duration of the test provide a skewed set of results from the test. \nThe point above also links to the problem of the limited time that doctors spend with seniors. Doctors can do in lab tests on their patients, however, often patients deteriorate greatly between doctor visits, while having no doctor supervision. A second example of this is heart trouble. Doctors can perform tests to determine the condition of their patients. These cardiologists have no way of knowing anymore about the patient, apart from their biannual 1-2-hour checkups with their family doctor.`,\n        heading: `Problem`\n    },\n\n    {\n        data: `Chronic Heart Failure (CHF) currently harms almost 400,000 Canadians and the prevalence is projected to increase [1], [2]. Patients suffering CHF experience debilitating breathlessness and more than 50,000 Canadians per year require hospitalization for emergency treatment costing almost $500 Million [2], [3]. Unfortunately, 24% of these patients are re-admitted within a year with further decompensated CHF [4]. The Canadian government has committed to improving community care for patients with CHF and seeks specifically to reduce hospital readmission for CHF [5]. Recent reports that decompensated CHF can reliably be predicted and emergency hospitalization prevented using a variety of monitoring systems are exciting but tempered by the fact that these systems are expensive and invasive, requiring to be surgically placed within the patients’ body [6], [7].`,\n        heading: `Impact that is caused by the problem`\n    },\n\n    {\n        data: `In response to these limitations, much effort has been directed to develop inexpensive, non-invasive predictors of decompensated CHF. Progress has been made in monitoring breathing patterns such as irregular or Cheyne-Strokes respiration [8], central sleep apnea and, recently, the creation of a “respiration stability index” (RSI) [9], [10]. \n\nAt the HSS, we have developed a method for monitoring and scanning for irregularities in the breathing of patients. The method that we have developed is a fully non-contact method of gathering and analyzing the breathing rate of the patient. This system solves the problems of a breathing belt: it is comfortable and can gather large amounts of data for long periods of time. Additionally, our system will allow a doctor to either see the patients breathing patterns in real time and to see an extensive history of the patients breathing patterns. This allows doctors to be more informed about their patients during doctor visits and allows a doctor to check in with a patient (that suffers from CHF) remotely.`,\n        heading: `How can it be remedied?`\n    },\n\n    {\n        data: `The system uses off-the-shelf radar circuit board and antenna to send low power microwave frequency pulsed signals towards patient and receive reflected signals from its body. The data received is processed by the patent-pending algorithms made by the HSS team. These algorithms will recognize breathing from general noise that is present in the radar signal. The rate and inhale/exhale graph are derived from the amount of time the radar signal reflected by the patient body takes to return to the antenna. The time these signals take to return, correlates to the distance from the radar to the patient’s chest. As the radar detects the patients, the algorithms can learn what is normal breathing and with is abnormal/ alarming breathing rates and patterns. Upon detection of irregular breathing, the system can trigger an alert or send a notification to the patient’s caregiver or family members. `,\n        heading: `How the tech works?`\n    },\n\n    {\n        data: `We have worked in the area of breathing rate estimation in last several years. Below is the sample of our research publications:\n\n1.\tM. Forouzanfar, M. Mabrouk, S. Rajan, M. Bolic, H. R. Dajani, “Event Recognition for Contactless Activity Monitoring Using Phase-Modulated Continuous Wave Radar,” IEEE Transactions on Biomedical Engineering, Vol: 64, Issue: 2, pp. 479 – 491, Feb. 2017.\n2.\tM. Mabrouk, S. Rajan, M. Bolic, M. Forouzanfar, H. R. Dajani and I. Batkin, “Human breathing rate estimation from radar returns using harmonically related filters,” Journal of Sensors, Hindawi Publishing Corporation, Article ID 9891852, Vol. 2016, 2016. \n3.\tI. Nejadgholi, S. Rajan, M. Bolic, “Time-Frequency Based Contactless Estimation of Vital Signs of Human While Walking Using PMCW Radar,” 2016 IEEE 18th International Conference on e-Health Networking, Applications and Services (Healthcom).\n4.\tM. Mabrouk, S. Rajan, M. Bolic, I. Batkin, H. R. Dajani, V. Z. Groza, “Model of Human Breathing Reflected Signal Received by PN-UWB Radar,” EMBC 2014.\n5.\tM. Mabrouk, S. Rajan, M. Bolic, I. Batkin, H. R. Dajani, V. Z. Groza, “Detection of Human Targets behind the Wall Based on Singular Value Decomposition and Skewness Variations,” pp. 1466 – 1470, IEEE Radar Conference 2014.\n6.\tX. Zhang, Characterizing performance of the radar system for breathing and heart rate estimation in real-life conditions, M.Sc. thesis, University of Ottawa, Canada, 2017.`,\n        heading: `Our publications`\n    },\n\n    {\n        data: `\n[1]\tChow CM, et al, Regional variation in self-reported heart disease prevalence in Canada, Canadian Journal of Cardiology, 2005;21(14):1265-71.\n[2]\tJohansen H, et al, On the rise: The current and projected future burden of congestive heart failure hospitalization in Canada, Canadian Journal of Cardiology, 2003;(19(4):430-5.\n[3]\tTran DT, et al, The current and future financial burden of hospital admissions for heart failure in Canada: a cost analysis, CMAJ Open, 2016;4(3) E365-E370.\n[4]\tLee DS, et al, Regional outcomes of heart failure in Canada, Canadian Journal of Cardiology, 2004;20(6):599-607.\n[5]\tPatients First Action Plan for Health Care MOHLTC 2015, http://www.health.gov.on.ca/en/ms/ecfa/healthy_change/docs/rep_patientsfirst.pdf accessed 2017).\n[6]\tMooney DM, et al, Evolution from electrophysiologic to hemodynamic monitoring: the story of left atrial and pulmonary artery pressure monitors, Frontiers n  Physiology 2015;6(271)\n[7]\tSmall RS and Tang WH, Assessing Impedance in Heart Failure: From Device Diagnostics to Population Health Opportunities, Circulation Heart Failure 2016;9(1):e2761.\n[8]\tBrack T, Cheyne-Stokes respiration in patients with congestive heart failure, Swiss Med Weekly 2003;133:605–610.\n[9]\tAsanoi H, et al, Respiratory instability in patients with chronic heart failure: Quantification and application to telemedical management. Proc 35th Annu Conf IEEE Eng Med Biol, Osaka, July 2013.\n[10]\tTakagawa J, et al., Prospective Multicenter Study on Respiratory Stabilization during the Recovery Process from Deterioration of Heart Failure, the 81 Annual Scientific meeting of Japanese Circulation Society, 2017.\n\n`, heading: `References`\n    }\n];\n\n\nclass Rows extends React.Component {\n    render() {\n        return (\n            <div>\n                {\n                    this.props.contents.map(row => {\n                        return (\n                            <div key={row.heading}>\n                                <h1 style={styles1}>{row.heading}</h1>\n                                <pre className=\"preformatted\" style={styles}>{row.data}</pre>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n}\n\n\nclass Breathing extends React.Component {\n    render() {\n        return (\n            <div className=\"Breathing-component\">\n                <div className=\"Breathing-content\">\n                    <Rows contents={content}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nRows.propTypes = {\n    contents: PropTypes.array\n};\n\nexport default Breathing;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport picture from './Fallpicture.png'\nimport './Falls.css'\n\nvar styles = {\n    paddingLeft: 200, paddingRight: 200, paddingTop: 20,\n    color: '#204871',\n    fontSize: 15,\n    fontFamily: 'Verdana, Geneva, sans-serif'\n};\n\nvar styles2 = {\n    paddingTop: 50, paddingLeft: 100,\n    color: '#204871',\n    textAlign: 'center'\n};\n\nvar styles1 = {\n    paddingTop: 50, paddingLeft: 100,\n    color: '#204871'\n};\n\n\nvar content = [\n\n    {\n        \"heading\": `Problem`,\n        \"data\": `According to the World Population Aging 2013 report [1] the world population over the age of 60 is 841 million and growing, and 14% of this population is more than 80 years of age. Canadian census data reported that at 15.7% of the population, the number of seniors above 65 is at the highest level in history, and is continuing to grow (http://www.statcan.gc.ca/daily-quotidien/140926/dq140926b-eng.htm). Additional information demonstrates increasing demand for communal living, resulting in a boom in new retirement residence construction. We have confirmed this with a local developer, who also has shifted business away from condominiums to retirement residences. \n\nA simple fall is one of the greatest concerns for the elderly population, their families, and the operators of retirement and long-term care facilities. One of three adults aged 65 or older falls each year and 30% of these falls results in serious injuries according to the World Health Organization [2], and that amount rises to 50% by the age of 80. Reports from the nursing homes are that a 100-bed facility will have between 100-200 falls per year, and several more that go unreported [3].`\n    },\n\n    {\n        \"heading\": `Impact`,\n        \"data\": `There are no widely available, non-contact solution that detect falls and simultaneously monitor body position and basic vitals. Cameras were widely rejected due to privacy concerns. There are some motion sensors but the information is limited to indiscriminant movement. Others are considering alternate solutions such as radar, however none have been commercialized. It is possible that vitals monitoring could be integrated into the wearables, but compliance is a more complicated issue.`\n    },\n\n    {\n        \"heading\": `How can it be remedied?`,\n        \"data\": `Detection of falls using the radar was performed in [4] where it was observed that different parts of the human body move at different velocities during fall. The system for detecting fallen person [5] relies on the ability of the radar to scan the space close to the floor. A fall is detected if specific change in physiological parameters and/or specific motion are observed in that scanned area. Another fall detection method that relied on the distance of the torso from the floor was reported in [6]. This method required two radars. A biometric radar system was invented by Raytheon for identifying positional states of people using neural networks [7]. Extracted breathing, heartbeat and gait signals using two or more antennas were used to train a neural network. \n\nRecently, two research groups distinguished themselves in their work on fall detection. The MIT group led by Dr. Katabi has recently started a company called Emerald that uses through-the-wall radar to detect falls and monitor the state of the person (stationary or moving). The technology is based on algorithms that detect motions of different parts of the body and therefore reconstruct a rough silhouette of a person. The group also worked on breathing detection based on frequency-modulated CW radar that sweeps the band from 5.46 to 7.24 GHz [8]. The group from Villanova University lead by Dr. Amin developed advanced algorithms for fall detection based on Doppler signatures of human motion during fall [9]. The radar used was inexpensive pulse-Doppler range control radar operating at 5.8 GHz. As such, this radar cannot detect the breathing rate.`\n    },\n\n    {\n        \"heading\": `Our approach: Posture and activity detection`,\n        \"data\": `Machine learning algorithms have been developed to extract features from the signal that looks like this:`,\n        \"data1\": `\nOur innovation is based on the following:\n\nI.\tDistinguishing between fallen people on the ground and sitting or standing people through a set of extracted features from the breathing signal spectrum. This is the first work that relies on correct estimation of breathing to detect posture and these additional physiological features can make a difference in improving reliability of posture detection. \nII.\tReducing the false alarms in human detection by applying the statistical properties of the signal (skewness of the amplitude squared) for the range profiles at every range-bin in UWB radars resulting in more reliable ranging of a subject.\nIII.\tImproving reliability in human breathing detection through a novel algorithm based on singular value decomposition (SVD) and skewness variations. `,\n        \"image\": picture\n    },\n\n    {\n        \"heading\": `Our publications`,\n        \"data\": `We have worked in the area of breathing rate estimation in last several years. Below is the sample of our research publications:\n\n1.\tM. Forouzanfar, M. Mabrouk, S. Rajan, M. Bolic, H. R. Dajani, “Event Recognition for Contactless Activity Monitoring Using Phase-Modulated Continuous Wave Radar,” IEEE Transactions on Biomedical Engineering, Vol: 64, Issue: 2, pp. 479 – 491, Feb. 2017.\n2.\tM. Mabrouk at al., Remote sensing of human breathing at a distance, US patent application, US20150369911 A1, 2015.\n3.\tZ. Baird, I. Gunasekara, M. Bolic, S. Rajan, Principal Component Analysis-Based Occupancy Detection with Ultra Wideband Radar, late news paper, MWSCAS 2017.`\n\n    },\n\n    {\n        \"heading\": `References`,\n        \"data\": `\n[1]\tDepartment of Economic and Social Affairs Population Division,  United Nations, “World Population Ageing  2013,” New York, 2013.\n[2]\tWorld Health Organization, “Global report on falls prevention in older age,” http://www.who.int/ageing/publications/Falls_prevention7March.pdf, 2007, [Accessed 1 04 2015].\n[3]\tCenters for Desease Control and Prevention, “Falls in Nursing Homes,” http://www.cdc.gov/HomeandRecreationalSafety/Falls/nursing.html, 2015, [Accessed 1 04 2015].\n[4]\tL. Liu, M. Popescu, M. Skubic, M. Rantz, T. Yardibi, P. Cuddihy, “Automatic fall detection based on doppler radar motion signature,” 5th PervasiveHealth Workshop, 2011.\n[5]\tP. E. Cuddihy et al.,”Radar based systems and methods for detecting a fallen person,” U.S.Patent 0 002 434 A1, Jan., 3, 2013.\n[6]\tJ. Osterwall, ”Method and apparatus for a body position monitor using radar,” U.S. Patent, US7567200 B1, Nov, 2011.\n[7]\tW. Dwelly, V.N. Adams, ”Biometric radar system and method for identifying persons and positional states of persons,” U.S. Patent 8 026 840 B2, Sep, 2011.\n[8]\tF. Adib, H. Mao, Z. Kabelac, D. Katabi, R. C. Miller, “Smart Homes That Monitor Breathing and Heart Rate,“ ACM CHI'15, Seoul, South Korea, April 2015.\n[9]\tM.G. Amin, Y.D.Zhang, F. ahmad, K.C. Ho, “Radar signal processing for elderly fall detection: The future for in-home monitoring,“ IEEE Signal Processing Magazine, March 2016. `\n\n    }\n\n];\n\nclass Rows extends React.Component {\n    render() {\n        return (\n            <div>\n                {\n                    this.props.contents.map(row => {\n                        return (\n                            <div key={row.heading}>\n                                <h2 style={styles1}>{row.heading}</h2>\n                                <pre className=\"preformatted\" style={styles}>{row.data}</pre>\n                                {row.image ?\n                                    <div style={{paddingTop: 50, paddingLeft: 400}}><img src={row.image} alt=\"boohoo\"/>\n                                    </div> : null}\n                                {row.data1 ? <pre className=\"preformatted\" style={styles}>{row.data1}</pre> : null}\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nclass Falls extends React.Component {\n\n    render() {\n        return (\n            <div className=\"falls-component\">\n                <div className=\"falls-content\">\n                    <h1 style={styles2}>Falls, posture and activities</h1>\n                    <Rows contents={content}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nRows.propTypes = {\n    contents: PropTypes.array\n}\n\nexport default Falls;","import React from 'react';\nimport PubNubReact from \"pubnub-react\";\n\nconst myChannel = 'cloudChannel';\n\nexport default class PubNub extends React.Component {\n    constructor(props) {\n        super(props);\n        this.pubnub = new PubNubReact({\n            publishKey: 'pub-c-a49f577d-81c8-43c9-922e-3b13d0bbc91d',\n            subscribeKey: 'sub-c-2c446f30-32cd-11e9-aca0-3eee1dbf820c'\n        });\n        this.pubnub.init(this);\n    }\n\n    componentWillMount() {\n        this.pubnub.subscribe({channels: [myChannel], withPresence: true});\n\n        this.pubnub.getMessage(myChannel, (msg) => {\n            console.log(msg);\n        });\n\n        this.pubnub.getStatus((st) => {\n            console.log(st);\n            this.pubnub.publish({message: 'hello world from react', channel: myChannel});\n        });\n    }\n\n    componentWillUnmount() {\n        this.pubnub.unsubscribe({channels: ['channel1']});\n    }\n\n    render() {\n        const messages=this.pubnub.getMessage(myChannel);\n        return (\n            <div>\n                <ul>\n                    {messages.map((m,index)=><li key={'message'+index}>{m.message}</li>)}\n                </ul>\n            </div>\n        );\n    }\n}","const io = require('socket.io-client');\r\n\r\nvar socket =  io.connect('http://localhost:9092');\r\n\r\nsocket.on('connect', function(){\r\n    console.log('connected');\r\n})\r\n\r\n/*socket.on('Patient Real-time Information', function(data) {\r\n    console.log(data.deviceID, JSON.stringify(data));\r\n});*/\r\nfunction getMsg(){\r\n    socket.on('Patient Real-time Information', function(data) {\r\n        console.log(data.deviceID , JSON.stringify(data));\r\n    });\r\n}\r\n\r\n\r\nsocket.on('disconnect', function() {\r\n    console.log(' the user is disconnected');\r\n});\r\n\r\n/*function epochExample1() {\r\n    var d = new Date(); \r\n    promt('Cut/Paste into the converter to Test',(d.getTime()-d.getMilliseconds())/1000);\r\n };*/\r\n\r\nexport default getMsg;","import React from \"react\";\nimport PubNubReact from \"pubnub-react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport {Col, Divider, Progress, Row, Skeleton, Statistic, Typography, Modal, Descriptions } from \"antd\";\nimport getMsg from '../../Client'\n\nimport webSocket from 'socket.io-client';\nimport io from 'socket.io-client';\n\nconst myChannel = 'cloudChannel';\nconst {Title,} = Typography;\n\nexport default class ConsolePanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n            deviceID: null,\n            timestamp: null,\n            BreathRate: {val: 0, len: 0},\n            HeartRate: {val: 0, len: 0},\n            Falldetected: {val: 0, len: 0, lastDetect:'NA'},\n            series: [],\n        };\n        this.pubnub = new PubNubReact({\n            publishKey: 'pub-c-a49f577d-81c8-43c9-922e-3b13d0bbc91d',\n            subscribeKey: 'sub-c-2c446f30-32cd-11e9-aca0-3eee1dbf820c'\n        });\n        this.pubnub.init(this);\n    }\n\n    handleClose=()=>{\n        this.setState({show:false})\n    }\n\n    getRunningAvg = (item) => (item.len * item.val + item.val) / (item.len + 1);\n\n    //fetching data before the component mount\n    componentDidMount() {\n        let msg = getMsg;\n        console.log(msg);\n\n        function real_time_data(msg){\n            console.log(msg);\n            let time = new Date();\n            let clock = msg.message.timestamp.split(':');\n            let tempdata = {\n                date: new Date(time.getFullYear(), time.getMonth(), time.getDate(), clock[0], clock[1], clock[2]),\n                value: msg.message.BreathRate\n            }\n            this.chart.addData(tempdata, (this.chart.data.length > 60) ? 1 : 0);\n\n            this.setState({\n                deviceID: msg.message.deviceID,\n                timestamp: msg.message.timestamp,\n                BreathRate: {val: msg.message.BreathRate, len: this.state.BreathRate.len + 1},\n                HeartRate: {val: msg.message.HeartRate, len: this.state.HeartRate.len + 1},\n                Falldetected: {val: msg.message.Falldetected, len: this.state.Falldetected.len + 1,lastDetect:this.state.Falldetected.lastDetect},\n            })\n\n            if(this.state.Falldetected.val===1){\n                this.setState({\n                    show:true,\n                    Falldetected:{lastDetect:tempdata.date.toLocaleString()}\n                })\n            }\n        };\n\n        real_time_data(msg);\n    }\n\n    componentDidMount() {\n        am4core.useTheme(am4themes_animated)\n        const chart = am4core.create('chartdiv', am4charts.XYChart);\n        chart.paddingRight = 20;\n        chart.zoomOutButton.disabled = true;\n\n        const dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.grid.template.location = 0;\n        dateAxis.renderer.minGridDistance = 30;\n        dateAxis.interpolationDuration = 500;\n        dateAxis.rangeChangeDuration = 500;\n        dateAxis.dateFormats.setKey(\"second\", \"mm:ss\");\n        dateAxis.periodChangeDateFormats.setKey(\"second\", \"[bold]h:mm a\");\n        dateAxis.periodChangeDateFormats.setKey(\"minute\", \"[bold]h:mm a\");\n        dateAxis.periodChangeDateFormats.setKey(\"hour\", \"[bold]h:mm a\");\n        dateAxis.renderer.inside = true;\n        dateAxis.renderer.axisFills.template.disabled = true;\n        dateAxis.renderer.ticks.template.disabled = true;\n\n        const valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n        valueAxis.interpolationDuration = 500;\n        valueAxis.rangeChangeDuration = 500;\n        valueAxis.renderer.inside = true;\n        valueAxis.renderer.minLabelPosition = 0.05;\n        valueAxis.renderer.maxLabelPosition = 0.95;\n        valueAxis.renderer.axisFills.template.disabled = true;\n        valueAxis.renderer.ticks.template.disabled = true;\n\n        const series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.dateX = \"date\";\n        series.dataFields.valueY = \"value\";\n        series.tooltipText = \"{valueY.value}\";\n        series.interpolationDuration = 500;\n        series.defaultState.transitionDuration = 0;\n        series.tensionX = 0.8;\n\n        //styling the chart to show the threshold\n        const moderate = valueAxis.createSeriesRange(series);\n        moderate.value = 11.5;\n        moderate.endValue = 20;\n        moderate.contents.stroke = am4core.color(\"#008800\");\n\n        const critical = valueAxis.createSeriesRange(series);\n        critical.value = 20;\n        critical.endValue = 1000;\n        critical.contents.stroke = am4core.color(\"#880000\");\n\n        dateAxis.renderer.labels.template.adapter.add(\"rotation\", function (rotation, target) {\n            let dataItem = target.dataItem;\n            if (dataItem.date && dataItem.date.getTime() === am4core.time.round(new Date(dataItem.date.getTime()), \"minute\").getTime()) {\n                target.verticalCenter = \"middle\";\n                target.horizontalCenter = \"left\";\n                return -90;\n            } else {\n                target.verticalCenter = \"bottom\";\n                target.horizontalCenter = \"middle\";\n                return 0;\n            }\n        });\n\n        // horizontal Scrollbar\n        // const scrollbarX = new am4charts.XYChartScrollbar();\n        // scrollbarX.series.push(series);\n        // chart.scrollbarX = scrollbarX;\n\n        //cursor and tooltip on chart\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.behavior = 'none';\n        this.chart = chart;\n    }\n\n    componentWillUnmount() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n        if (this.timeout) {\n            clearTimeout(this.timeout)\n        }\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n        this.pubnub.unsubscribe({channels: [myChannel]})\n    }\n\n    render() {\n        return (\n            <div style={{padding: 24, background: '#fff', minHeight: 360}} className={'mainContent'}>\n                <Modal title=\"Title\" visible={this.state.show} onOk={this.handleClose} onCancel={this.handleClose}>\n                    <p>Fall detected</p>\n                </Modal>\n                <Row gutter={8} className={'firstRow'} justify={'center'}>\n                    <Col sm={24} md={18} align={'middle'}>\n                        <Title level={4}>Real time Breath rate</Title>\n                        <div id=\"chartdiv\" style={{width: \"100%\", height: \"300px\"}}></div>\n                    </Col>\n                    <Col sm={24} md={6} align={'middle'}>\n                        <Descriptions title={`Patient${0} info`} column={{ xxl: 4, xl: 3, lg: 2, md: 1, sm: 1, xs: 1 }}>\n                            <Descriptions.Item label=\"DeviceID\">001</Descriptions.Item>\n                            <Descriptions.Item label=\"ID\">2j3hc819sd1</Descriptions.Item>\n                            <Descriptions.Item label=\"Phone\">6130000000</Descriptions.Item>\n                            <Descriptions.Item label=\"Address\">177 Huron Rd.</Descriptions.Item>\n                        </Descriptions>\n                    </Col>\n                </Row>\n                <Divider type={\"horizontal\"}/>\n                <Row gutter={8} className={'SeocondRow'}>\n                    <Col sm={24} md={8} align={'middle'} className={'HeartRate'}>\n                        <Title level={4}>Heart rate showed</Title>\n                        <Progress type=\"dashboard\"\n                            // percent={this.state.hrList[this.state.hrList.length - 1]}\n                                  percent={this.state.HeartRate.val}\n                                  format={hr => `Hr:${Math.round(hr)}`}\n                                  default={'default'} strokeColor={'#D32F2F'}/>\n                        <Statistic title={'Average Heart Rate'} value={this.getRunningAvg(this.state.HeartRate)}/>\n                    </Col>\n                    <Col sm={24} md={8} align={'middle'} className={'BreathRate'}>\n                        <Title level={4}>Breath rate showed</Title>\n                        <Progress type=\"dashboard\"\n                            // percent={this.state.data[this.state.data.length - 1].value}\n                                  percent={this.state.BreathRate.val}\n                                  format={br => `Br:${Math.round(br)}`}\n                                  default={'default'} strokeColor={'#55a7d3'}/>\n                        <Statistic title={'Average Breath Rate'} value={this.getRunningAvg(this.state.BreathRate)}/>\n                    </Col>\n                    <Col sm={24} md={8} align={'middle'}>\n                        <Title level={4}>Health condition summary</Title>\n                        <Descriptions title={`Patient${0} info`} column={{ xxl: 4, xl: 3, lg: 2, md: 1, sm: 1, xs: 1 }}>\n                            <Descriptions.Item label=\"last fall detect\">{this.state.Falldetected.lastDetect}</Descriptions.Item>\n                        </Descriptions>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\n","import React from \"react\";\nimport {List} from \"antd\";\nimport {Link, Route} from \"react-router-dom\";\n\nconst consll = ({match}) => <h3>{match.params.id}</h3>;\n\nexport default class DevicePanel extends React.Component {\n\n    componentWillMount() {\n        this.listData = [];\n        for (let i = 0; i < 1; i++) {\n            this.listData.push({\n                deviceID: i,\n                href: `${this.props.match.url}/${i}`,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <List\n                    dataSource={this.listData}\n                    renderItem={item => (\n                        <List.Item key={item.deviceID}>\n                            <Link to={item.href}>{'device:' + item.deviceID}</Link>\n                        </List.Item>\n                    )}\n                />\n                <Route path={`/data`} component={consll}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Storage, Auth} from 'aws-amplify';\nimport List from \"antd/lib/list\";\nimport {Link, Route} from \"react-router-dom\";\n\n// Storage.configure({\n// //     AWSS3: {\n// //         bucket: 'uottawa-cloud-project',//Your bucket name;\n// //         region: 'us-east-1'//Specify the region your bucket was created in;\n// //     }\n// // });\n\n\nclass RenderVideo extends React.Component {\n\n    get = async (key) => {\n        try {\n            let result = await Storage.get(key);\n            console.log(result);\n            // this.setState({\n            //     video:result\n            // })\n            return result\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            video:null\n        }\n    }\n\n    componentDidMount() {\n        this.get(this.props.match.params.key)\n            .then(result=>{\n                this.setState({video:result})})\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log(nextProps)\n        this.get(nextProps.match.params.key)\n            .then(result=>{\n                this.setState({video:result})})\n    }\n\n    render() {\n        return (\n            <div>\n                <video width={'420px'} controls={true} src={this.state.video} />\n            </div>\n        )\n    }\n}\n\nexport default class S3Content extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            s3content: [],\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        this.list()\n    }\n\n    list = async () => {\n        try {\n            let result = await Storage.list('');\n            console.log(result);\n            this.setState({\n                s3content: result,\n                loading: false\n            })\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n    onChange(e) {\n        const file = e.target.files[0];\n        console.log(file);\n        Storage.put(file.name, file, {\n            contentType: 'video/*',level:'patient'\n        })\n            .then(result => console.log(result))\n            .catch(err => console.log(err));\n    }\n\n\n    render() {\n        const match=this.props.match;\n        return (\n            <div>\n                <List loading={this.state.loading}\n                      dataSource={this.state.s3content}\n                      renderItem={item => (\n                          <List.Item>\n                              <List.Item.Meta title={<Link to={`${match.url}/` + item.key}>{item.key}</Link>}/>\n                          </List.Item>\n                      )}/>\n                {/*<input*/}\n                {/*    type=\"file\" accept='video/*'*/}\n                {/*    onChange={(e) => this.onChange(e)}/>*/}\n                <Route path={`${match.url}/:key`} component={RenderVideo}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {Layout, Menu, Icon, Typography, List, Modal,} from 'antd';\nimport Amplify from \"aws-amplify\";\nimport awsmobile from \"../../aws-exports\";\nimport {withAuthenticator} from \"aws-amplify-react\";\n\nimport ConsolePanel from '../../components/PanelComponent/ConsolePanel';\nimport DevicePanel from '../../components/PanelComponent/DevicePanel';\nimport S3Content from '../../components/PanelComponent/File';\n\n\nconst {Content, Sider,} = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            key: '1',\n        }\n    }\n\n\n    onCollapse = (collapsed) => {\n        this.setState({collapsed});\n    };\n\n    onMenuClick = (event) => {\n        // event.key give the key selected\n        // event.keyPath give the full path to the sub item selected\n        this.setState({key: event.key})\n    };\n\n    render() {\n        const renderItem = (key) => {\n            switch (key) {\n                case \"1\":\n                    return <DevicePanel/>;\n                case \"2\":\n                    return <ConsolePanel/>;\n                case \"3\":\n                    return <S3Content match={{url: 'dashboard'}}/>;\n                default:\n                    return <ConsolePanel/>\n            }\n        };\n\n        let {key, collapsed} = this.state;\n        const match = this.props.match;\n\n        return (\n            <Layout style={{minHeight: '100vh'}}>\n                <Sider\n                    collapsible\n                    collapsed={collapsed}\n                    onCollapse={this.onCollapse}>\n\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" onClick={this.onMenuClick}>\n                        <Menu.Item key=\"1\"><Link to={`${match.url}/device`}>\n                            <Icon type={'desktop'}/><span>Devices</span></Link></Menu.Item>\n                        <Menu.Item key=\"2\"><Link to={`${match.url}/console`}>\n                            <Icon type={'pie-chart'}/><span>Dash board</span></Link></Menu.Item>\n                        <Menu.Item key=\"3\"><Link to={`${match.url}/file`}>\n                            <Icon type=\"file\"/><span>File</span></Link></Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Content style={{margin: '0 16px'}}>\n                        {/*{renderItem(key)}*/}\n                        <Route exact path={`${match.url}`} component={()=><h1>DashBoard</h1>}/>\n                        <Route path={`${match.url}/console`} component={ConsolePanel}/>\n                        <Route path={`${match.url}/device`} component={DevicePanel}/>\n                        <Route path={`${match.url}/file`} component={S3Content}/>\n                    </Content>\n                </Layout>\n                \n            </Layout>\n        );\n    }\n}\n\nAmplify.configure(awsmobile);\nexport default withAuthenticator(DashBoard, {includeGreetings: true});\n","import React from 'react';\nimport './App.css';\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\nimport {Layout} from \"antd\";\nimport CustomHeader from './components/CustomHeader/CustomHeader';\nimport User from './components/user';\nimport Data from './components/data';\nimport Notfound from \"./components/notfound\";\nimport Home from './pages/Home/Home'\nimport Faq from './pages/FAQ/Faq';\nimport Breathing from \"./pages/Breathing/Breathing\";\nimport Falls from \"./pages/Falls/Falls\";\nimport PubNub from './components/pubnub';\nimport Dashboard from './pages/DashBoard/Dashboard';\nimport DevicePanel from \"./components/PanelComponent/DevicePanel\";\nimport S3Content from \"./components/PanelComponent/File\";\n\nconst {Header,Content,} = Layout;\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Layout>\n                    <Header>\n                        <CustomHeader/>\n                    </Header>\n                    <Content>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home}/> \n                            <Route path=\"/users\" component={User}/>\n                            <Route path=\"/data\" component={Data}/>\n                            <Route path=\"/faq\" component={Faq}/>\n                            <Route path=\"/breathing\" component={Breathing}/>\n                            <Route path=\"/Falls\" component={Falls}/>\n                            <Route path=\"/pubnub\" component={PubNub}/>\n                            <Route path=\"/dashboard\" component={Dashboard}/>\n                            <Route path=\"/demo\" component={Data}/>\n                            <Route component={Notfound}/>\n                        </Switch>\n                    </Content>\n                </Layout>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\n/*import sockjs from 'socket.io-client'\nclass home extends React.Component{\n    componentDidMount(){\n        this.testconnect();\n    }\n   testconnect=()=>{\n   let socket = sockjs(\"ws://localhost:3900\", {\n         transports: ['websocket']\n        })\n\n// /不间断尝试重连接\n    socket.on('reconnect_attempt',()=> { \n      console.log(\"reconnect\")\n      socket.transports = ['websocket','polling', 'flashsocket']; \n    });\n\n// 重连接时出错\n    socket.on('reconnect_error',(attemptNumber)=> { \n      console.log(attemptNumber)\n    });\n\n//连接成功走这个方法\n    socket.on('connect',()=>{\n      console.log(socket.connected)\n    })\n\n//报错时走这个方法\n    socket.on('connect_error', (error) => {\n      console.log(error)\n    });\n\n//连接存活验证 \n    socket.on('ping', (error) => {\n      console.log('ping_include')\n    });\n*/\n//import * as d3 from \"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js\";\n\n\n/*var app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\nvar port = process.env.PORT || 3000;\nlet date = new Date();\nlet deviceID = `device:${date.getDate()}:${date.getMonth() + 1}:${date.getFullYear()}:${date.getHours()}:00:00`;\nlet BreathRate = d3.randomNormal(15, 2)();\nlet HeartRate = d3.randomNormal(55, 5)();\nlet falldetected = Math.round(Math.random()-0.3);\nlet timestamp = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\nlet msg = {\n    \"BreathRate\": BreathRate,\n    \"deviceID\": deviceID,\n    \"Falldetected\": falldetected,\n    \"HeartRate\": HeartRate,\n    \"timestamp\": timestamp,\n};\n    \nio.emit('Patient Real-time Information', msg);*/\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/home1.37e094e8.png\";","module.exports = __webpack_public_path__ + \"static/media/home12.b976e016.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fallpicture.310cd936.png\";"],"sourceRoot":""}